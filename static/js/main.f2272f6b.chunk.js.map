{"version":3,"sources":["constants/actionTypes.js","helpers/notification.js","actions/users.js","reducer/ui.js","reducer/auth.js","data/index.js","reducer/users.js","reducer/debates.js","reducer/qna.js","reducer/page.js","reducer/statistic.js","reducer/index.js","middlewares/catchError.js","helpers/message.js","middlewares/catchPage.js","store/index.js","actions/qna.js","actions/debates.js","components/card/SummaryCard.js","components/graph/LineGraph.js","constants/map.js","components/table/UserTable.js","components/table/QnaTable.js","constants/colors.js","actions/page.js","components/navbar/NavMenu.js","components/shared/Logo.js","components/navbar/NavBar.js","actions/ui.js","components/navbar/DrawerNav.js","helpers/modal.js","components/shared/Header.js","actions/auth.js","components/shared/Footer.js","components/layout/BaseLayout.js","pages/Home.js","actions/statistic.js","pages/QnA.js","components/DeleteButton.js","pages/QnADetail.js","components/table/DebateTable.js","pages/Debates.js","pages/Users.js","pages/Login.js","pages/e404.js","App.js","index.js"],"names":["OPEN_SIDER","CLOSE_SIDER","OPEN_DRAWER","CLOSE_DRAWER","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAILURE","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAILURE","GET_DEBATES_REQUEST","GET_DEBATES_SUCCESS","GET_DEBATES_FAILURE","DELETE_DEBATES_REQUEST","DELETE_DEBATES_SUCCESS","DELETE_DEBATES_FAILURE","GET_QNAS_REQUEST","GET_QNAS_SUCCESS","GET_QNAS_FAILURE","GET_QNA_DETAIL_REQUEST","GET_QNA_DETAIL_SUCCESS","GET_QNA_DETAIL_FAILURE","UPDATE_QNA_COMMENT_REQUEST","UPDATE_QNA_COMMENT_SUCCESS","UPDATE_QNA_COMMENT_FAILURE","DELETE_QNA_COMMENT_REQUEST","DELETE_QNA_COMMENT_SUCCESS","DELETE_QNA_COMMENT_FAILURE","SET_CURRENT_PAGE","openNotificationWithIcon","type","message","description","duration","key","Math","floor","random","notification","open","onClick","close","deleteUser","id","dispatch","body","auth","cpId","authKey","userId","payload","window","$axios","post","then","res","catch","err","error","getUsers","option","users","data","result","total","INITIAL_STATE","sider","collapsed","drawer","user","token","loading","index","name","role","nickname","level","loggedAt","Date","now","debates","roomId","channel","status","title","createdAt","qna","author","currentPage","items","selectedItem","localStorage","getItem","rootReducer","combineReducers","ui","state","action","filter","item","commentContent","comment","page","statistic","catchError","store","next","msg","delay","catchPage","setItem","middlewares","thunk","createStore","composeWithDevTools","applyMiddleware","fetchQnA","r","fetchDebates","deleteDebate","SummaryCard","bodyStyle","padding","bordered","className","style","background","this","props","iconBackground","icon","span","textAlign","marginBottom","subtitle","margin","marginTop","theme","marginLeft","updated","React","Component","LineGraph","ctx","document","getElementById","Chart","labels","datasets","label","borderWidth","options","responsive","legend","display","tooltips","intersect","scales","xAxes","gridLines","ticks","fontSize","fontColor","yAxes","drawBorder","beginAtZero","maxTicksLimit","width","height","placement","refresh","length","MENU_MAP","ROLE_MAP","0","color","1","2","moment","locale","UserTable","columns","dataIndex","render","undefined","date","format","fromNow","text","onCancel","onConfirm","cancelText","okText","shape","size","headStyle","fontWeight","extra","more","to","dataSource","pagination","connect","QnaTable","href","str","setPage","NavMenu","handlePage","defaultSelectedKeys","String","mode","Item","bind","Logo","shortcut","cn","show","Sider","Layout","Navbar","trigger","collapsible","closeDrawer","DrawerNav","visible","toggle","setState","showDrawer","onClose","closable","confirm","Modal","Header","toggleSider","openSider","closeSider","toggleDrawer","openDrawer","offset","ok","cancel","content","onOk","Promise","resolve","reject","setTimeout","showConfirm","logout","clear","location","Footer","BaseLayout","NavBar","transition","children","Home","updatedAt","graph","xAxisLabels","mapDateToArray","map","mapDataToArray","count","renderLineGraph","dataLabel","getDailyStatistic","getQnA","getDebates","prevProps","prevState","Content","minHeight","gutter","xs","sm","xl","colors","lg","md","Option","Select","Search","Input","QnA","listType","keyword","handleListOptionChange","value","onSearch","loadQnA","onPageChange","pageSize","skip","Group","compact","defaultValue","marginRight","onChange","autoFocus","placeholder","enterButton","defaultCurrent","DeleteButton","TextArea","QnADetail","target","handleComment","notify","match","params","updateComment","loadQna","isLocked","createDate","viewCount","justifyContent","deleteQna","datetime","commentDate","image","Empty","PRESENTED_IMAGE_SIMPLE","autosize","minRows","maxRows","disabled","getState","DebateTable","filters","filterMultiple","debate","handleTableChange","sorter","handleStatusFilter","filterConfirm","filterReset","Debates","handleSelectChange","Users","userType","handleUserOptionChange","Login","handleSubmit","e","preventDefault","form","validateFields","login","getFieldDecorator","onSubmit","rules","required","prefix","htmlType","block","WrappedLogin","Form","create","disptch","password","response","e404","subTitle","App","onload","pathname","exact","path","component","$store","axios","defaults","baseURL","ReactDOM"],"mappings":"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","file":"static/js/main.f2272f6b.chunk.js","sourcesContent":["// UI Control\r\nexport const OPEN_SIDER = \"OPEN_SIDER\";\r\nexport const CLOSE_SIDER = \"CLOSE_SIDER\";\r\nexport const OPEN_DRAWER = \"OPEN_DRAWER\";\r\nexport const CLOSE_DRAWER = \"CLOSE_DRAWER\";\r\n\r\n// Auth\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\n// User\r\nexport const GET_USERS_REQUEST = \"GET_USERS_REQUEST\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\nexport const GET_USERS_FAILURE = \"GET_USERS_FAILURE\";\r\nexport const DELETE_USER_REQUEST = \"DELETE_USER_REQUEST\";\r\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\r\nexport const DELETE_USER_FAILURE = \"DELETE_USER_FAILURE\";\r\n\r\n// Debate\r\nexport const GET_DEBATES_REQUEST = \"GET_DEBATES_REQUEST\";\r\nexport const GET_DEBATES_SUCCESS = \"GET_DEBATES_SUCCESS\";\r\nexport const GET_DEBATES_FAILURE = \"GET_DEBATES_FAILURE\";\r\nexport const DELETE_DEBATES_REQUEST = \"DELETE_DEBATES_REQUEST\";\r\nexport const DELETE_DEBATES_SUCCESS = \"DELETE_DEBATES_SUCCESS\";\r\nexport const DELETE_DEBATES_FAILURE = \"DELETE_DEBATES_FAILURE\";\r\n\r\n// QnA\r\nexport const GET_QNAS_REQUEST = \"GET_QNAS_REQUEST\";\r\nexport const GET_QNAS_SUCCESS = \"GET_QNAS_SUCCESS\";\r\nexport const GET_QNAS_FAILURE = \"GET_QNAS_FAILURE\";\r\nexport const GET_QNA_DETAIL_REQUEST = \"GET_QNA_DETAIL_REQUEST\";\r\nexport const GET_QNA_DETAIL_SUCCESS = \"GET_QNA_DETAIL_SUCCESS\";\r\nexport const GET_QNA_DETAIL_FAILURE = \"GET_QNA_DETAIL_FAILURE\";\r\nexport const UPDATE_QNA_COMMENT_REQUEST = \"UPDATE_QNA_COMMENT_REQUEST\";\r\nexport const UPDATE_QNA_COMMENT_SUCCESS = \"UPDATE_QNA_COMMENT_SUCCESS\";\r\nexport const UPDATE_QNA_COMMENT_FAILURE = \"UPDATE_QNA_COMMENT_FAILURE\";\r\nexport const DELETE_QNA_COMMENT_REQUEST = \"DELETE_QNA_COMMENT_REQUEST\";\r\nexport const DELETE_QNA_COMMENT_SUCCESS = \"DELETE_QNA_COMMENT_SUCCESS\";\r\nexport const DELETE_QNA_COMMENT_FAILURE = \"DELETE_QNA_COMMENT_FAILURE\";\r\n\r\n// Page\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\n\r\n// Statistic\r\nexport const GET_DAILY_STATISTIC_REQUEST = \"GET_DAILY_STATISTIC_REQUEST\";\r\nexport const GET_DAILY_STATISTIC_SUCCESS = \"GET_DAILY_STATISTIC_SUCCESS\";\r\nexport const GET_DAILY_STATISTIC_FAILURE = \"GET_DAILY_STATISTIC_FAILURE\";\r\n","import { notification } from \"antd\";\r\n\r\nexport default function openNotificationWithIcon({\r\n  type = \"success\",\r\n  message,\r\n  description,\r\n  duration = 3\r\n}) {\r\n  const key = Math.floor(Math.random() * 100);\r\n  notification.open({\r\n    type,\r\n    message,\r\n    description,\r\n    key,\r\n    duration,\r\n    onClick: () => {\r\n      notification.close(key);\r\n    }\r\n  });\r\n}\r\n\r\n// openNotificationWithIcon(Math.random(), \"success\");\r\n// openNotificationWithIcon(Math.random(), \"info\");\r\n// openNotificationWithIcon(Math.random(), \"warning\");\r\n// openNotificationWithIcon(Math.random(), \"error\");\r\n","import {\r\n  GET_USERS_REQUEST,\r\n  GET_USERS_SUCCESS,\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_SUCCESS,\r\n  GET_USERS_FAILURE,\r\n  DELETE_USER_FAILURE\r\n} from \"../constants/actionTypes\";\r\n\r\nimport openNotificationWithIcon from \"../helpers/notification\";\r\n\r\nexport const deleteUser = id => dispatch => {\r\n  dispatch({\r\n    type: DELETE_USER_REQUEST\r\n  });\r\n\r\n  let body = {\r\n    auth: {\r\n      cpId: \"DebateONM\",\r\n      authKey: \"Q29uc3V…\"\r\n    },\r\n    userId: id\r\n  };\r\n\r\n  dispatch({\r\n    type: DELETE_USER_SUCCESS,\r\n    payload: {\r\n      id\r\n    }\r\n  });\r\n\r\n  openNotificationWithIcon({\r\n    type: \"success\",\r\n    key: Math.random(),\r\n    message: \"사용자 삭제\",\r\n    description: `사용자(${id})를 삭제하였습니다.`\r\n  });\r\n\r\n  window.$axios\r\n    .post(\"/user/setDeletionUser\", body)\r\n    .then(res => {\r\n      dispatch({\r\n        type: DELETE_USER_SUCCESS,\r\n        payload: {\r\n          id\r\n        }\r\n      });\r\n\r\n      openNotificationWithIcon({\r\n        type: \"success\",\r\n        key: Math.random(),\r\n        message: \"사용자 삭제\",\r\n        description: `사용자(${id})를 삭제하였습니다.`\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: DELETE_USER_FAILURE,\r\n        payload: {\r\n          error: err.message\r\n        }\r\n      });\r\n    });\r\n};\r\n\r\nexport const getUsers = option => dispatch => {\r\n  dispatch({\r\n    type: GET_USERS_REQUEST\r\n  });\r\n\r\n  let body = {\r\n    auth: {\r\n      cpId: \"DebateONM\",\r\n      authKey: \"Q29uc3V…\"\r\n    },\r\n    ...option\r\n  };\r\n\r\n  window.$axios\r\n    .post(\"/user/getUserList\", body)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_USERS_SUCCESS,\r\n        payload: {\r\n          users: res.data.result,\r\n          total: res.data.total\r\n        }\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_USERS_FAILURE,\r\n        payload: {\r\n          error: err.message\r\n        }\r\n      });\r\n    });\r\n};\r\n","import {\r\n  OPEN_SIDER,\r\n  CLOSE_SIDER,\r\n  OPEN_DRAWER,\r\n  CLOSE_DRAWER\r\n} from \"../constants/actionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  sider: {\r\n    collapsed: false\r\n  },\r\n  drawer: {\r\n    open: false\r\n  }\r\n};\r\n\r\nexport default function reducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case OPEN_SIDER:\r\n      return {\r\n        ...state,\r\n        sider: {\r\n          collapsed: false\r\n        }\r\n      };\r\n\r\n    case CLOSE_SIDER:\r\n      return {\r\n        ...state,\r\n        sider: {\r\n          collapsed: true\r\n        }\r\n      };\r\n    case OPEN_DRAWER:\r\n      return {\r\n        ...state,\r\n        drawer: {\r\n          open: true\r\n        }\r\n      };\r\n\r\n    case CLOSE_DRAWER:\r\n      return {\r\n        ...state,\r\n        drawer: {\r\n          open: false\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_REQUEST,\r\n  LOGIN_FAILURE,\r\n  LOGOUT\r\n} from \"../constants/actionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  user: null,\r\n  token: null,\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\nexport default function reducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: action.payload.token,\r\n        user: action.payload.user,\r\n        error: null\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: null,\r\n        user: null,\r\n        error: action.payload.error\r\n      };\r\n\r\n    case LOGOUT:\r\n      return {\r\n        user: null,\r\n        token: null,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// Graph dummy data\r\n\r\n// User dummy data\r\nexport const users = [\r\n  {\r\n    index: Math.floor(Math.random() * 10),\r\n    id: \"John Brown\",\r\n    name: 32,\r\n    role: [\"관리자\"],\r\n    nickname: \"Tester\",\r\n    level: 1,\r\n    loggedAt: Date.now()\r\n  },\r\n  {\r\n    index: Math.floor(Math.random() * 10),\r\n    id: \"John Blue\",\r\n    name: 32,\r\n    role: [\"관리자\"],\r\n    nickname: \"Tester\",\r\n    level: 2,\r\n    loggedAt: Date.now()\r\n  },\r\n  {\r\n    index: Math.floor(Math.random() * 10),\r\n    id: \"John Red\",\r\n    name: 32,\r\n    role: [\"관리자\"],\r\n    nickname: \"Tester\",\r\n    level: 0,\r\n    loggedAt: Date.now()\r\n  }\r\n];\r\n\r\nexport const debates = [\r\n  {\r\n    roomId: Math.floor(Math.random() * 10),\r\n    channel: \"스포츠\",\r\n    status: \"진행중\",\r\n    title: \"본 의회는 동물실험을 금지해야 한다.\",\r\n    createdAt: Date.now(),\r\n    userId: \"parkoon\"\r\n  },\r\n  {\r\n    roomId: Math.floor(Math.random() * 10),\r\n    channel: \"스포츠\",\r\n    status: \"진행중\",\r\n    title: \"대마초를 합법화해야 하는가?\",\r\n    createdAt: Date.now(),\r\n    userId: \"parkoon\"\r\n  },\r\n  {\r\n    roomId: Math.floor(Math.random() * 10),\r\n    channel: \"스포츠\",\r\n    status: \"진행중\",\r\n    title: \"프로야구, 불문율은 필요한가.\",\r\n    createdAt: Date.now(),\r\n    userId: \"parkoon\"\r\n  },\r\n  {\r\n    roomId: Math.floor(Math.random() * 10),\r\n    channel: \"스포츠\",\r\n    status: \"진행중\",\r\n    title: \"e스포츠는 올림픽 정식 종목에 포함될 수 있는가.\",\r\n    createdAt: Date.now(),\r\n    userId: \"parkoon\"\r\n  },\r\n  {\r\n    roomId: Math.floor(Math.random() * 10),\r\n    channel: \"스포츠\",\r\n    status: \"진행중\",\r\n    title: \"박태환의 올림픽 출전 결정은 바람직한가\",\r\n    createdAt: Date.now(),\r\n    userId: \"parkoon\"\r\n  }\r\n];\r\n\r\nexport const qna = [\r\n  {\r\n    index: Math.floor(Math.random() * 10),\r\n    author: \"guest\",\r\n    title: \"이곳은 테스트 페이지 입니까?\",\r\n    createdAt: Date.now(),\r\n    status: \"대기\"\r\n  }\r\n];\r\n\r\nexport const qnaDetail = {\r\n  writer: \"홍길동\",\r\n  createdAt: \"1990.09.17\",\r\n  answerd: false,\r\n  title: \"제목 제목 제목\",\r\n  content:\r\n    \"군사법원의 조직·권한 및 재판관의 자격은 법률로 정한다. 언론·출판에 대한 허가나 검열과 집회·결사에 대한 허가는 인정되지 아니한다. 근로자는 근로조건의 향상을 위하여 자주적인 단결권·단체교섭권 및 단체행동권을 가진다. 국민경제의 발전을 위한 중요정책의 수립에 관하여 대통령의 자문에 응하기 위하여 국민경제자문회의를 둘 수 있다. 국가는 농수산물의 수급균형과 유통구조의 개선에 노력하여 가격안정을 도모함으로써 농·어민의 이익을 보호한다.\",\r\n  comment: \"구글링 하세요\"\r\n};\r\n","import {\r\n  GET_USERS_FAILURE,\r\n  GET_USERS_REQUEST,\r\n  GET_USERS_SUCCESS,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_FAILURE,\r\n  DELETE_USER_REQUEST\r\n} from \"../constants/actionTypes\";\r\nimport { users } from \"../data\";\r\n\r\nconst INITIAL_STATE = {\r\n  users: users,\r\n  currentPage: 1,\r\n  error: null,\r\n  loading: false,\r\n  total: null\r\n};\r\n\r\nexport default function reducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case GET_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        // users: [],\r\n        error: action.payload.error,\r\n        loading: false\r\n      };\r\n\r\n    case GET_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case GET_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: action.payload.users,\r\n        total: action.payload.total,\r\n        error: null,\r\n        loading: false\r\n      };\r\n\r\n    case DELETE_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case DELETE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user.id !== action.payload.id),\r\n        loading: false\r\n      };\r\n\r\n    case DELETE_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_DEBATES_FAILURE,\r\n  GET_DEBATES_REQUEST,\r\n  GET_DEBATES_SUCCESS,\r\n  DELETE_DEBATES_FAILURE,\r\n  DELETE_DEBATES_REQUEST,\r\n  DELETE_DEBATES_SUCCESS\r\n} from \"../constants/actionTypes\";\r\n\r\nimport { debates } from \"../data\";\r\n\r\nconst INITIAL_STATE = {\r\n  items: debates,\r\n  currentPage: 1,\r\n  error: null,\r\n  loading: false,\r\n  total: null\r\n};\r\n\r\nexport default function reducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case GET_DEBATES_FAILURE:\r\n      return {\r\n        ...state,\r\n        // items: [],\r\n        error: action.payload.error,\r\n        loading: false\r\n      };\r\n\r\n    case GET_DEBATES_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case GET_DEBATES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        items: action.payload.items,\r\n        total: action.payload.total,\r\n        error: null,\r\n        loading: false\r\n      };\r\n\r\n    case DELETE_DEBATES_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case DELETE_DEBATES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        items: state.items.filter(item => item.roomId !== action.payload.id)\r\n      };\r\n\r\n    case DELETE_DEBATES_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_QNAS_FAILURE,\r\n  GET_QNAS_REQUEST,\r\n  GET_QNAS_SUCCESS,\r\n  GET_QNA_DETAIL_FAILURE,\r\n  GET_QNA_DETAIL_REQUEST,\r\n  GET_QNA_DETAIL_SUCCESS,\r\n  UPDATE_QNA_COMMENT_FAILURE,\r\n  UPDATE_QNA_COMMENT_REQUEST,\r\n  UPDATE_QNA_COMMENT_SUCCESS,\r\n  DELETE_QNA_COMMENT_REQUEST,\r\n  DELETE_QNA_COMMENT_SUCCESS,\r\n  DELETE_QNA_COMMENT_FAILURE\r\n} from \"../constants/actionTypes\";\r\n\r\nimport { qna } from \"../data\";\r\n\r\nconst INITIAL_STATE = {\r\n  items: qna,\r\n  currentPage: 1,\r\n  selectedItem: null,\r\n  error: null,\r\n  loading: false,\r\n  total: null\r\n};\r\n\r\nexport default function reducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case GET_QNAS_FAILURE:\r\n      return {\r\n        ...state,\r\n        // items: [],\r\n        error: action.payload.error,\r\n        loading: false\r\n      };\r\n\r\n    case GET_QNAS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        selectedItem: null\r\n      };\r\n\r\n    case GET_QNAS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        items: action.payload.items,\r\n        total: action.payload.total,\r\n        error: null,\r\n        loading: false\r\n      };\r\n\r\n    case GET_QNA_DETAIL_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loading: false\r\n      };\r\n    case GET_QNA_DETAIL_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_QNA_DETAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        selectedItem: action.payload.item\r\n      };\r\n\r\n    case UPDATE_QNA_COMMENT_FAILURE:\r\n      return { ...state, loading: false, error: action.payload.error };\r\n    case UPDATE_QNA_COMMENT_REQUEST:\r\n      return { ...state, loading: true };\r\n    case UPDATE_QNA_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        selectedItem: {\r\n          ...state.selectedItem,\r\n          commentContent: action.payload.comment\r\n        }\r\n      };\r\n\r\n    case DELETE_QNA_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case DELETE_QNA_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    case DELETE_QNA_COMMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_PAGE } from \"../constants/actionTypes\";\r\n\r\nconst INITIAL_STATE =\r\n  window.localStorage.getItem(\"currentPage\") || \"/dashboard\";\r\n\r\nexport default function reducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_PAGE:\r\n      return action.payload.page;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_DAILY_STATISTIC_FAILURE,\r\n  GET_DAILY_STATISTIC_REQUEST,\r\n  GET_DAILY_STATISTIC_SUCCESS\r\n} from \"../constants/actionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  items: [],\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\nexport default function(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case GET_DAILY_STATISTIC_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case GET_DAILY_STATISTIC_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        items: action.payload.items\r\n      };\r\n    case GET_DAILY_STATISTIC_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport uiReducer from \"./ui\";\r\nimport authReducer from \"./auth\";\r\nimport userReducer from \"./users\";\r\nimport debateReducer from \"./debates\";\r\nimport qnaReducer from \"./qna\";\r\nimport pageReducer from \"./page\";\r\nimport statisticReducer from \"./statistic\";\r\n\r\nconst rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  auth: authReducer,\r\n  users: userReducer,\r\n  debates: debateReducer,\r\n  qna: qnaReducer,\r\n  page: pageReducer,\r\n  statistic: statisticReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { error } from \"../helpers/message\";\r\nimport { LOGIN_FAILURE } from \"../constants/actionTypes\";\r\n\r\nconst catchError = store => next => action => {\r\n  if (action.payload && action.payload.error) {\r\n    switch (action.type) {\r\n      case LOGIN_FAILURE:\r\n        return error(action.payload.error);\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nexport default catchError;\r\n","import { message } from \"antd\";\r\n\r\nconst success = (msg, delay = 1.5) => {\r\n  message.success(msg, delay);\r\n};\r\nconst error = (msg, delay = 1.5) => {\r\n  message.error(msg, delay);\r\n};\r\n\r\nexport { success, error };\r\n","import { SET_CURRENT_PAGE } from \"../constants/actionTypes\";\r\n\r\n// 새로고침해도 마지막에 있던 페이지가 어디인지 기억하기 위해서\r\n// 페이지 변경이 있을 때 이곳에서 캐치하고\r\n// 로컬스토리지에 저장시킨다.\r\nconst catchPage = store => next => action => {\r\n  if (action.type === SET_CURRENT_PAGE) {\r\n    window.localStorage.setItem(\"currentPage\", action.payload.page);\r\n  }\r\n  next(action);\r\n};\r\n\r\nexport default catchPage;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport catchError from \"../middlewares/catchError\";\r\nimport catchPage from \"../middlewares/catchPage\";\r\nconst middlewares = [thunk, catchError, catchPage];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  GET_QNAS_REQUEST,\r\n  GET_QNAS_SUCCESS,\r\n  GET_QNA_DETAIL_REQUEST,\r\n  GET_QNA_DETAIL_SUCCESS,\r\n  UPDATE_QNA_COMMENT_REQUEST,\r\n  UPDATE_QNA_COMMENT_SUCCESS,\r\n  GET_QNAS_FAILURE,\r\n  GET_QNA_DETAIL_FAILURE,\r\n  UPDATE_QNA_COMMENT_FAILURE,\r\n  DELETE_QNA_COMMENT_REQUEST,\r\n  DELETE_QNA_COMMENT_SUCCESS,\r\n  DELETE_QNA_COMMENT_FAILURE\r\n} from \"../constants/actionTypes\";\r\n\r\nimport store from \"../store\";\r\n\r\nexport const fetchQnA = option => dispatch => {\r\n  const body = {\r\n    auth: {\r\n      cpId: \"DebateWeb\",\r\n      authKey: \"Q29uc3V…\"\r\n    },\r\n    ...option\r\n  };\r\n\r\n  dispatch({\r\n    type: GET_QNAS_REQUEST\r\n  });\r\n\r\n  window.$axios\r\n    .post(\"/qna/getQnaList\", body)\r\n    .then(r => {\r\n      return dispatch({\r\n        type: GET_QNAS_SUCCESS,\r\n        payload: {\r\n          items: r.data.result,\r\n          total: r.data.total\r\n        }\r\n      });\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_QNAS_FAILURE,\r\n        payload: {\r\n          error: err.message\r\n        }\r\n      })\r\n    );\r\n};\r\n\r\nexport const fetchQnAById = index => dispatch => {\r\n  dispatch({\r\n    type: GET_QNA_DETAIL_REQUEST\r\n  });\r\n\r\n  const body = {\r\n    auth: {\r\n      cpId: \"DebateWeb\",\r\n      authKey: \"Q29uc3V…\"\r\n    },\r\n    index\r\n  };\r\n\r\n  window.$axios\r\n    .post(\"/qna/getQnaInfo\", body)\r\n    .then(r => {\r\n      return dispatch({\r\n        type: GET_QNA_DETAIL_SUCCESS,\r\n        payload: {\r\n          item: r.data.result\r\n        }\r\n      });\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_QNA_DETAIL_FAILURE,\r\n        payload: {\r\n          error: err.message\r\n        }\r\n      })\r\n    );\r\n};\r\n\r\nexport const deleteQnAById = index => dispatch => {\r\n  dispatch({\r\n    type: DELETE_QNA_COMMENT_REQUEST\r\n  });\r\n\r\n  const body = {\r\n    auth: {\r\n      cpId: \"DebateWeb\",\r\n      authKey: \"Q29uc3V…\"\r\n    },\r\n    index,\r\n    userId: store.getState().auth.user ? store.getState().auth.user.id : \"test\"\r\n  };\r\n\r\n  window.$axios\r\n    .post(\"/qna/setDeletionQna\", body)\r\n    .then(r => {\r\n      dispatch({\r\n        type: DELETE_QNA_COMMENT_SUCCESS\r\n      });\r\n\r\n      // todo... history back 하고 싶은데...\r\n      window.location.href = \"/qna\";\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: DELETE_QNA_COMMENT_FAILURE,\r\n        payload: {\r\n          error: err.message\r\n        }\r\n      })\r\n    );\r\n};\r\n\r\nexport const updateComment = (index, comment) => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_QNA_COMMENT_REQUEST\r\n  });\r\n\r\n  const body = {\r\n    auth: {\r\n      cpId: \"DebateWeb\",\r\n      authKey: \"Q29uc3V…\"\r\n    },\r\n    index,\r\n    comment\r\n  };\r\n\r\n  window.$axios\r\n    .post(\"/qna/setQnaComment\", body)\r\n    .then(r => {\r\n      return dispatch({\r\n        type: UPDATE_QNA_COMMENT_SUCCESS,\r\n        payload: {\r\n          comment\r\n        }\r\n      });\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: UPDATE_QNA_COMMENT_FAILURE,\r\n        payload: {\r\n          error: err.message\r\n        }\r\n      })\r\n    );\r\n};\r\n","import {\r\n  GET_DEBATES_SUCCESS,\r\n  DELETE_DEBATES_SUCCESS,\r\n  DELETE_DEBATES_REQUEST,\r\n  // GET_DEBATES_FAILURE,\r\n  GET_DEBATES_REQUEST,\r\n  GET_DEBATES_FAILURE,\r\n  DELETE_DEBATES_FAILURE\r\n} from \"../constants/actionTypes\";\r\n\r\nimport openNotificationWithIcon from \"../helpers/notification\";\r\n\r\nexport const fetchDebates = option => dispatch => {\r\n  dispatch({\r\n    type: GET_DEBATES_REQUEST\r\n  });\r\n\r\n  const body = {\r\n    auth: {\r\n      cpId: \"DebateWeb\",\r\n      authKey: \"Q29uc3V…\"\r\n    },\r\n    ...option\r\n  };\r\n\r\n  window.$axios\r\n    .post(\"/room/getRoomList\", body)\r\n    .then(r => {\r\n      dispatch({\r\n        type: GET_DEBATES_SUCCESS,\r\n        payload: {\r\n          items: r.data.result,\r\n          total: r.data.total\r\n        }\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_DEBATES_FAILURE,\r\n        payload: {\r\n          error: err.message\r\n        }\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteDebate = id => dispatch => {\r\n  const body = {\r\n    auth: {\r\n      cpId: \"DebateWeb\",\r\n      authKey: \"Q29uc3V…\"\r\n    },\r\n    roomId: id\r\n  };\r\n\r\n  dispatch({\r\n    type: DELETE_DEBATES_REQUEST\r\n  });\r\n\r\n  openNotificationWithIcon({\r\n    type: \"success\",\r\n    key: Math.random(),\r\n    message: \"사용자 삭제\",\r\n    description: `토론방(${id})을 삭제하였습니다.`\r\n  });\r\n\r\n  dispatch({\r\n    type: DELETE_DEBATES_SUCCESS,\r\n    payload: {\r\n      id\r\n    }\r\n  });\r\n\r\n  window.$axios\r\n    .post(\"/room/setDeletionRoom\", body)\r\n    .then(r => {\r\n      openNotificationWithIcon({\r\n        type: \"success\",\r\n        key: Math.random(),\r\n        message: \"사용자 삭제\",\r\n        description: `토론방(${id})을 삭제하였습니다.`\r\n      });\r\n\r\n      dispatch({\r\n        type: DELETE_DEBATES_SUCCESS,\r\n        payload: {\r\n          id\r\n        }\r\n      });\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: DELETE_DEBATES_FAILURE,\r\n        payload: { error: err.message }\r\n      })\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Card, Divider, Icon, Col, Row } from \"antd\";\r\n\r\nclass SummaryCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card\r\n        bodyStyle={{ padding: \"14px\" }}\r\n        bordered={false} /*loading*/\r\n        className=\"card__summary\"\r\n      >\r\n        <div\r\n          className=\"summary__icon-container\"\r\n          style={{ background: this.props.iconBackground }}\r\n        >\r\n          {this.props.icon}\r\n        </div>\r\n\r\n        <Row>\r\n          <Col span={24} style={{ textAlign: \"right\" }}>\r\n            <div>\r\n              <p style={{ marginBottom: \"0\" }}>{this.props.title}</p>\r\n              <h2>{this.props.subtitle}</h2>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Divider style={{ margin: 0, marginTop: \"14px\" }} />\r\n          <div style={{ marginTop: \"8px\" }}>\r\n            <Icon type=\"calendar\" theme=\"filled\" />\r\n            <span style={{ marginLeft: \"4px\" }}>{this.props.updated}</span>\r\n          </div>\r\n        </Row>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SummaryCard;\r\n","import React from \"react\";\r\nimport { Card, Divider, Row, Col, Icon, Tooltip } from \"antd\";\r\nimport Chart from \"chart.js\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass LineGraph extends React.Component {\r\n  componentDidMount() {\r\n    var ctx = document.getElementById(\"myChart\");\r\n\r\n    // Chart.defaults.LineWithLine = Chart.defaults.line;\r\n    // Chart.controllers.LineWithLine = Chart.controllers.line.extend({\r\n    //   draw: function(ease) {\r\n    //     Chart.controllers.line.prototype.draw.call(this, ease);\r\n    //     if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\r\n    //       var activePoint = this.chart.tooltip._active[0],\r\n    //         ctx = this.chart.ctx,\r\n    //         x = activePoint.tooltipPosition().x,\r\n    //         topY = this.chart.scales[\"y-axis-0\"].top,\r\n    //         bottomY = this.chart.scales[\"y-axis-0\"].bottom;\r\n\r\n    //       // draw line\r\n    //       ctx.save();\r\n    //       ctx.beginPath();\r\n    //       ctx.moveTo(x, topY);\r\n    //       ctx.lineTo(x, bottomY);\r\n    //       ctx.lineWidth = 2;\r\n    //       ctx.strokeStyle = \"#07C\";\r\n    //       ctx.stroke();\r\n    //       ctx.restore();\r\n    //     }\r\n    //   }\r\n    // });\r\n    // https://stackoverflow.com/questions/45159895/moving-vertical-line-when-hovering-over-the-chart-using-chart-js\r\n    new Chart(ctx, {\r\n      type: \"line\",\r\n      // data: {\r\n      //   labels: this.props.xAxisLabels,\r\n      //   datasets: [\r\n      //     {\r\n      //       label: this.props.dataLabel,\r\n      //       data: this.props.data,\r\n      //       fill: false, // 라인 안쪽을 채울지 여부\r\n      //       borderColor: \"tomato\", // 라인 색\r\n      //       lineTension: 0.1, // 라인 굴곡\r\n      //       pointBorderColor: \"tomato\",\r\n      //       pointBackgroundColor: \"#fff\",\r\n      //       pointHoverRadius: 4,\r\n      //       pointRadius: 4,\r\n      //       pointHoverBackgroundColor: \"tomato\"\r\n      //     }\r\n      //   ]\r\n      // },\r\n      data: {\r\n        labels: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"],\r\n        datasets: [\r\n          {\r\n            label: \"# of Votes\",\r\n            data: [12, 19, 3, 5, 2, 3],\r\n            borderWidth: 1\r\n          },\r\n          {\r\n            label: \"# of Points\",\r\n            data: [7, 11, 5, 8, 3, 7],\r\n            borderWidth: 1\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        legend: {\r\n          display: false\r\n        },\r\n        tooltips: {\r\n          intersect: false\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: {\r\n                fontSize: 10,\r\n                fontColor: \"gray\"\r\n              }\r\n            }\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                drawBorder: false\r\n                // display: false,\r\n              },\r\n              ticks: {\r\n                beginAtZero: true,\r\n                // fontSize: 15\r\n                fontColor: \"#fff\",\r\n                maxTicksLimit: 5,\r\n                padding: 25\r\n              }\r\n            }\r\n          ]\r\n        }\r\n\r\n        // maintainAspectRatio: false,\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card bordered={false} className=\"wrapper__graph\">\r\n        {/* <Card title={this.props.title} bordered={false}> */}\r\n        <div className=\"graph__box\">\r\n          <canvas\r\n            id=\"myChart\"\r\n            className=\"chartjs\"\r\n            style={{ display: \"block\", width: \"100%\", height: \"198px\" }}\r\n          ></canvas>\r\n        </div>\r\n\r\n        <Tooltip placement=\"bottom\" title={\"통계 새로고침\"}>\r\n          <Icon\r\n            type=\"reload\"\r\n            className=\"graph__reload\"\r\n            onClick={this.props.refresh}\r\n          />\r\n        </Tooltip>\r\n\r\n        <Divider></Divider>\r\n        <Row className=\"graph__info\">\r\n          <Col span={2} className=\"info__yesterday\">\r\n            <h1 className=\"info__title\">어제 방문수</h1>\r\n            <span className=\"info__data\">\r\n              {this.props.data[this.props.data.length - 2] || 0}\r\n            </span>\r\n          </Col>\r\n          <Col span={2} className=\"info__today\">\r\n            <h1 className=\"info__title\">오늘 방문수</h1>\r\n            <span className=\"info__data\">\r\n              {this.props.data[this.props.data.length - 1] || 0}\r\n            </span>\r\n          </Col>\r\n          {/* <Col span={20} className=\"info__total\">\r\n            <h1 className=\"info__title\">누적 방문수</h1>\r\n            <span className=\"info__data\">(need api)</span>\r\n          </Col> */}\r\n        </Row>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nLineGraph.propTypes = {\r\n  xAxisLabels: PropTypes.array.isRequired,\r\n  data: PropTypes.array,\r\n  dataLabel: PropTypes.string\r\n};\r\n\r\nexport default LineGraph;\r\n","export const MENU_MAP = {\r\n  \"/dashboard\": \"대시보드\",\r\n  \"/users\": \"회원 관리\",\r\n  \"/debates\": \"토론방 관리\",\r\n  \"/qna\": \"문의 게시판\"\r\n};\r\n\r\nexport const ROLE_MAP = {\r\n  0: {\r\n    name: \"관리자\",\r\n    color: \"#ff7a45\"\r\n  },\r\n  1: {\r\n    name: \"운영자\",\r\n    color: \"green\"\r\n  },\r\n  2: {\r\n    name: \"일반 사용자\",\r\n    color: \"geekblue\"\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ko\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  Tag,\r\n  Divider,\r\n  Popconfirm,\r\n  Icon,\r\n  Card,\r\n  Tooltip,\r\n  Button,\r\n  Row,\r\n  Col\r\n} from \"antd\";\r\nimport { deleteUser } from \"../../actions/users\";\r\nimport { ROLE_MAP } from \"../../constants/map\";\r\n\r\nmoment.locale(\"ko\");\r\n\r\nconst More = () => (\r\n  <Tooltip placement=\"bottom\" title={\"더보기\"}>\r\n    <Link to=\"/users\">\r\n      <Icon type=\"more\" />\r\n    </Link>\r\n  </Tooltip>\r\n);\r\n\r\nclass UserTable extends React.Component {\r\n  columns = [\r\n    // {\r\n    //   title: \"번호\",\r\n    //   dataIndex: \"index\",\r\n    //   key: \"index\",\r\n    //   render: text => <a href>{text}</a>\r\n    // },\r\n    {\r\n      title: \"아이디\",\r\n      dataIndex: \"id\",\r\n      key: \"id\"\r\n    },\r\n    {\r\n      title: \"넥네임\",\r\n      dataIndex: \"nickname\",\r\n      key: \"nickname\"\r\n    },\r\n    {\r\n      title: \"권한\",\r\n      key: \"level\",\r\n      dataIndex: \"level\",\r\n      render: level => {\r\n        if (level !== undefined) {\r\n          return (\r\n            <Tag color={ROLE_MAP[level].color} key={level}>\r\n              {ROLE_MAP[level].name}\r\n            </Tag>\r\n          );\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: \"최종 접속일\",\r\n      dataIndex: \"recentDate\",\r\n      key: \"recentDate\",\r\n      render: date => (\r\n        <span>\r\n          {moment(date).format(\"LLL\")}\r\n          <Divider type=\"vertical\" />\r\n          {moment(date).fromNow()}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"삭제\",\r\n      key: \"delete\",\r\n      render: (text, user) => (\r\n        <span>\r\n          {/* <Divider type=\"vertical\" /> */}\r\n          <Popconfirm\r\n            title={`${user.id}를 삭제 하시겠습니까?`}\r\n            icon={<Icon type=\"question-circle-o\" style={{ color: \"red\" }} />}\r\n            onCancel={() => {}}\r\n            onConfirm={() => {\r\n              this.props.dispatch(deleteUser(user.id));\r\n            }}\r\n            cancelText=\"취소\"\r\n            okText=\"삭제\"\r\n          >\r\n            <Button\r\n              className=\"header__trigger pc\"\r\n              shape=\"round\"\r\n              icon=\"delete\"\r\n              // type=\"danger\"\r\n              size=\"small\"\r\n            />\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={this.props.title && \"회원 관리\"}\r\n        headStyle={{ fontWeight: \"bold\" }}\r\n        bordered={false}\r\n        extra={this.props.more && More()}\r\n        style={{ height: this.props.height }}\r\n      >\r\n        <Table\r\n          columns={this.columns}\r\n          dataSource={this.props.users}\r\n          pagination={false}\r\n          loading={this.props.loading}\r\n        />\r\n\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <Col style={{ textAlign: \"right\" }}>{this.props.pagination}</Col>\r\n        </Row>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UserTable);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ko\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Divider, Icon, Card, Tooltip, Row, Col } from \"antd\";\r\n\r\nmoment.locale(\"ko\");\r\n\r\nconst More = () => (\r\n  <Tooltip placement=\"bottom\" title={\"더보기\"}>\r\n    <Link to=\"/users\">\r\n      <Icon type=\"more\" />\r\n    </Link>\r\n  </Tooltip>\r\n);\r\n\r\nclass QnaTable extends React.Component {\r\n  columns = [\r\n    {\r\n      title: \"번호\",\r\n      dataIndex: \"index\",\r\n      key: \"index\"\r\n    },\r\n    {\r\n      title: \"작성자\",\r\n      dataIndex: \"author\",\r\n      key: \"author\"\r\n    },\r\n    {\r\n      title: \"제목\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      render: (title, qna) => {\r\n        // // 아이디는 변경될 수 있음\r\n        const id = qna.index;\r\n        const to = `/qna/${id}`;\r\n        return (\r\n          <Link to={to}>\r\n            <a href>{title}</a>\r\n          </Link>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      title: \"문의일\",\r\n      dataIndex: \"createDate\",\r\n      key: \"createDate\",\r\n      render: date => (\r\n        <span>\r\n          {moment(date).format(\"LLL\")}\r\n          <Divider type=\"vertical\" />\r\n          {moment(date).fromNow()}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"답변여부\",\r\n      key: \"status\",\r\n      dataIndex: \"status\",\r\n      render: status => {\r\n        let str = \"\";\r\n        if (!status || status === \"ready\") {\r\n          str = (\r\n            <Icon\r\n              type=\"question-circle\"\r\n              theme=\"filled\"\r\n              style={{ fontSize: \"1.3rem\", color: \"#faad14\" }}\r\n            />\r\n          );\r\n        } else {\r\n          str = (\r\n            <Icon\r\n              type=\"check-circle\"\r\n              theme=\"filled\"\r\n              style={{ fontSize: \"1.3rem\", color: \"#237804\" }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return <span>{str}</span>;\r\n      }\r\n    }\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={this.props.title && \"QnA 관리\"}\r\n        headStyle={{ fontWeight: \"bold\" }}\r\n        bordered={false}\r\n        extra={this.props.more && More()}\r\n        style={{ height: this.props.height }}\r\n      >\r\n        <Table\r\n          columns={this.columns}\r\n          dataSource={this.props.items}\r\n          pagination={false}\r\n          loading={this.props.loading}\r\n        />\r\n\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <Col style={{ textAlign: \"right\" }}>{this.props.pagination}</Col>\r\n        </Row>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({ ...state });\r\n// const mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect()(QnaTable);\r\n","export default {\r\n  linearGreen: \"linear-gradient(60deg, #66bb6a, #43a047\",\r\n  linearOrange: \"linear-gradient(60deg, #ffa726, #fb8c00)\",\r\n  linearRed: \"linear-gradient(60deg, #ef5350, #e53935)\",\r\n  linearBlue: \"linear-gradient(60deg, #26c6da, #00acc1\"\r\n};\r\n","import { SET_CURRENT_PAGE } from \"../constants/actionTypes\";\r\n\r\nexport const setPage = page => ({\r\n  type: SET_CURRENT_PAGE,\r\n  payload: {\r\n    page\r\n  }\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { setPage } from \"../../actions/page\";\r\n\r\nclass NavMenu extends Component {\r\n  state = {\r\n    collapsed: false\r\n  };\r\n\r\n  handlePage = name => {\r\n    this.props.dispatch(setPage(name));\r\n  };\r\n\r\n  render() {\r\n    const { page } = this.props;\r\n    return (\r\n      <>\r\n        <Menu\r\n          defaultSelectedKeys={[String(page)]}\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          // inlineCollapsed={this.state.collapsed}\r\n          style={{ background: \"transparent\", marginTop: \"24px\" }}\r\n          className=\"menu\"\r\n        >\r\n          <Menu.Item\r\n            key=\"/dashboard\"\r\n            onClick={this.handlePage.bind(this, \"/dashboard\")}\r\n            className=\"menu__item\"\r\n          >\r\n            <Link to=\"/\">\r\n              <Icon className=\"item__icon\" type=\"layout\" theme=\"filled\" />\r\n              <span className=\"item__title\">대시보드</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"/users\"\r\n            onClick={this.handlePage.bind(this, \"/users\")}\r\n            className=\"menu__item\"\r\n          >\r\n            <Link to=\"/users\">\r\n              <Icon className=\"item__icon\" type=\"contacts\" theme=\"filled\" />\r\n              <span className=\"item__title\">회원 관리</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"/debates\"\r\n            onClick={this.handlePage.bind(this, \"/debates\")}\r\n            className=\"menu__item\"\r\n          >\r\n            <Link to=\"/debates\">\r\n              <Icon className=\"item__icon\" type=\"message\" theme=\"filled\" />\r\n              <span className=\"item__title\">토론방 관리</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"/qna\"\r\n            onClick={this.handlePage.bind(this, \"/qna\")}\r\n            className=\"menu__item\"\r\n          >\r\n            <Link to=\"qna\">\r\n              <Icon className=\"item__icon\" type=\"table\" />\r\n              <span className=\"item__title\">문의 게시판</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(NavMenu);\r\n","import React from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nconst Logo = ({ shortcut }) => (\r\n  <>\r\n    <div className={cn(\"wrapper__logo--shortcut\", { show: shortcut })}>\r\n      <span className=\"logo--k\">K</span>\r\n      <span className=\"logo--p\">P</span>\r\n    </div>\r\n    <div className={cn(\"wrapper__logo--full\", { show: !shortcut })}>\r\n      <div className=\"logo--k\">K</div>\r\n      <div className=\"logo--point\">p</div>\r\n      <div className=\"logo--admin\">admin</div>\r\n      {/* <span>어드민</span> */}\r\n      {/* <div className=\"logo--no\">nowledge</div>\r\n      <div className=\"logo--point\">Point</div> */}\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Layout } from \"antd\";\r\nimport NavMenu from \"./NavMenu\";\r\nimport Logo from \"../shared/Logo\";\r\nimport { connect } from \"react-redux\";\r\nconst { Sider } = Layout;\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { ui } = this.props;\r\n\r\n    return (\r\n      <Sider\r\n        trigger={null}\r\n        collapsible\r\n        collapsed={ui.sider.collapsed}\r\n        className=\"navbar\"\r\n        width={260}\r\n      >\r\n        <div style={{ height: \"71px\", background: \"#262626\" }}>\r\n          <Logo shortcut={ui.sider.collapsed} />\r\n        </div>\r\n\r\n        {/* <Divider></Divider> */}\r\n        {/* <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />{\" \"}\r\n        Tania Adrew */}\r\n        <NavMenu />\r\n      </Sider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Navbar);\r\n","import {\r\n  OPEN_SIDER,\r\n  CLOSE_SIDER,\r\n  CLOSE_DRAWER,\r\n  OPEN_DRAWER\r\n} from \"../constants/actionTypes\";\r\n\r\nexport const openSider = () => {\r\n  return {\r\n    type: OPEN_SIDER\r\n  };\r\n};\r\n\r\nexport const closeSider = () => {\r\n  return {\r\n    type: CLOSE_SIDER\r\n  };\r\n};\r\n\r\nexport const openDrawer = () => {\r\n  return {\r\n    type: OPEN_DRAWER\r\n  };\r\n};\r\n\r\nexport const closeDrawer = () => {\r\n  return {\r\n    type: CLOSE_DRAWER\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Drawer } from \"antd\";\r\nimport { closeDrawer } from \"../../actions/ui\";\r\nimport NavMenu from \"./NavMenu\";\r\nimport Logo from \"../shared/Logo\";\r\n\r\nclass DrawerNav extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n    visible: false\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Drawer\r\n          placement=\"left\"\r\n          closable={false}\r\n          onClose={this.props.close}\r\n          visible={this.props.open}\r\n          className=\"drawer\"\r\n        >\r\n          <Logo />\r\n          <NavMenu />\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    close: () => dispatch(closeDrawer())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(DrawerNav);\r\n","import { Modal } from \"antd\";\r\nconst { confirm } = Modal;\r\n\r\nexport default function showConfirm({ ok, cancel, title, content }) {\r\n  confirm({\r\n    title,\r\n    content,\r\n    onOk() {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          if (typeof ok === \"function\") {\r\n            resolve();\r\n            ok();\r\n          }\r\n        }, 1000);\r\n      });\r\n    },\r\n    onCancel() {\r\n      if (typeof cancel === \"function\") cancel();\r\n    }\r\n  });\r\n}\r\n","/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React, { Component } from \"react\";\r\nimport { Layout, Row, Col, Icon, Divider } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  openSider,\r\n  closeSider,\r\n  closeDrawer,\r\n  openDrawer\r\n} from \"../../actions/ui\";\r\nimport { logout } from \"../../actions/auth\";\r\nimport showConfirm from \"../../helpers/modal\";\r\nimport moment from \"moment\";\r\nimport { MENU_MAP } from \"../../constants/map\";\r\n\r\nclass Header extends Component {\r\n  toggleSider = () => {\r\n    const {\r\n      openSider,\r\n      closeSider,\r\n      ui: { sider }\r\n    } = this.props;\r\n\r\n    sider.collapsed ? openSider() : closeSider();\r\n  };\r\n\r\n  toggleDrawer = () => {\r\n    const {\r\n      openDrawer,\r\n      closeDrawer,\r\n      ui: { drawer }\r\n    } = this.props;\r\n\r\n    drawer.open ? closeDrawer() : openDrawer();\r\n  };\r\n\r\n  render() {\r\n    const { ui, page } = this.props;\r\n    return (\r\n      <Layout.Header className=\"wrapper__header\">\r\n        <Row>\r\n          <Col span={12} className=\"header__left\">\r\n            <div className=\"header__trigger pc\" onClick={this.toggleSider}>\r\n              <Icon type={ui.sider.collapsed ? \"bars\" : \"more\"} />\r\n            </div>\r\n            {/* <Button\r\n              className=\"header__trigger pc\"\r\n              shape=\"circle\"\r\n              icon={ui.sider.collapsed ? \"bars\" : \"more\"}\r\n              size=\"large\"\r\n              onClick={this.toggleSider}\r\n            /> */}\r\n\r\n            <div className=\"header__trigger mobile\" onClick={this.toggleSider}>\r\n              <Icon type={ui.sider.collapsed ? \"bars\" : \"more\"} />\r\n            </div>\r\n\r\n            <h1 className=\"header__title\">{MENU_MAP[page]}</h1>\r\n          </Col>\r\n          <Col span={8} offset={4} className=\"header__right\">\r\n            <div className=\"right__info\">\r\n              <span>관리자</span> 님이 로그인 하였습니다.\r\n              <span className=\"date\">{moment().format(\"LL\")}</span>\r\n            </div>\r\n            <Divider type=\"vertical\" style={{ background: \"#999\" }} />\r\n\r\n            <div\r\n              className=\"right__btn-logout\"\r\n              onClick={() => {\r\n                showConfirm({\r\n                  ok: this.props.logout,\r\n                  title: \"정말로 로그아웃 하시겠습니까?\",\r\n                  content: \"로그아웃시 로그인 페이지로 이동합니다.\"\r\n                });\r\n              }}\r\n            >\r\n              <Icon type=\"logout\" />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Layout.Header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    openSider: () => dispatch(openSider()),\r\n    closeSider: () => dispatch(closeSider()),\r\n    openDrawer: () => dispatch(openDrawer()),\r\n    closeDrawer: () => dispatch(closeDrawer()),\r\n    logout: () => dispatch(logout())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_FAILURE,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT\r\n} from \"../constants/actionTypes\";\r\nimport moment from \"moment\";\r\n\r\nexport const logout = () => {\r\n  window.localStorage.clear();\r\n  window.location.href = \"/\";\r\n  return {\r\n    type: LOGOUT\r\n  };\r\n};\r\n\r\nexport const login = user => disptch => {\r\n  const { id, password } = user;\r\n\r\n  disptch({\r\n    type: LOGIN_REQUEST\r\n  });\r\n\r\n  window.$axios\r\n    .post(\"/auth/login\", {\r\n      auth: {\r\n        cpId: \"DebateWeb\",\r\n        authKey: \"Q29uc3V…\"\r\n      },\r\n      userId: id,\r\n      password: password,\r\n      userType: 0\r\n    })\r\n    .then(res => {\r\n      window.localStorage.setItem(\"token\", \"token...\");\r\n\r\n      disptch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n          user: {\r\n            name: \"관리자\",\r\n            loggedAt: moment()\r\n          },\r\n          token: \"token...\"\r\n        }\r\n      });\r\n    })\r\n    .catch(err => {\r\n      disptch({\r\n        type: LOGIN_FAILURE,\r\n        payload: {\r\n          error: err.response.data.message\r\n        }\r\n      });\r\n    });\r\n};\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>© 2012 All rights reserved. Knowledgepoint Co., Ltd.b</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout, Divider } from \"antd\";\r\nimport NavBar from \"../navbar/NavBar\";\r\nimport DrawerNav from \"../navbar/DrawerNav\";\r\nimport Header from \"../shared/Header\";\r\nimport Footer from \"../shared/Footer\";\r\n\r\nclass BaseLayout extends React.Component {\r\n  render() {\r\n    const { ui } = this.props;\r\n    return (\r\n      <Layout>\r\n        <NavBar />\r\n        <DrawerNav open={ui.drawer.open} />\r\n        <Layout\r\n          className=\"app__content\"\r\n          style={{\r\n            marginLeft: ui.sider.collapsed ? \"80px\" : \"260px\",\r\n            transition: \".2s\"\r\n          }}\r\n        >\r\n          <Header />\r\n\r\n          {this.props.children}\r\n\r\n          <Divider style={{ marginTop: 0 }} />\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(BaseLayout);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout, Row, Col, Icon } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport { getUsers } from \"../actions/users\";\r\nimport { fetchQnA } from \"../actions/qna\";\r\nimport { fetchDebates } from \"../actions/debates\";\r\n\r\n// Components\r\nimport SummaryCard from \"../components/card/SummaryCard\";\r\nimport LineGraph from \"../components/graph/LineGraph\";\r\nimport UserTable from \"../components/table/UserTable\";\r\nimport QnaTable from \"../components/table/QnaTable\";\r\n\r\n// Dummy Data\r\nimport colors from \"../constants/colors\";\r\nimport BaseLayout from \"../components/layout/BaseLayout\";\r\nimport { fetchDailyStatistic } from \"../actions/statistic\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    updatedAt: moment().format(\"LLL\"),\r\n    graph: {\r\n      data: [],\r\n      xAxisLabels: []\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getUsers();\r\n    this.props.getQnA();\r\n    this.props.getDebates();\r\n\r\n    this.props.getDailyStatistic();\r\n\r\n    this.setState({\r\n      updatedAt: moment().format(\"LLL\")\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // watch statistic update\r\n    if (\r\n      this.props.statistic.items.length !== prevProps.statistic.items.length\r\n    ) {\r\n      this.setState({\r\n        graph: {\r\n          xAxisLabels: this.mapDateToArray(),\r\n          data: this.mapDataToArray()\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  mapDateToArray = () => {\r\n    return this.props.statistic.items.map((item, index) => {\r\n      // 첫 번째와 다음달 첫번 째\r\n      if (index === 0 || moment(item.date).date() === 1) {\r\n        return moment(item.date).format(\"M월 DD일\");\r\n      }\r\n\r\n      // 오늘\r\n      if (moment(item.date).date() === moment().date()) {\r\n        return \"오늘\";\r\n      }\r\n\r\n      return moment(item.date).date();\r\n    });\r\n  };\r\n\r\n  mapDataToArray = () => this.props.statistic.items.map(item => item.count);\r\n\r\n  renderLineGraph = () => {\r\n    return (\r\n      // this.state.graph.xAxisLabels.length > 0 && (\r\n      // this.state.graph.data.length > 0 && (\r\n      <LineGraph\r\n        title=\"라인 그래프\"\r\n        dataLabel=\"일간 방문수\"\r\n        data={this.state.graph.data}\r\n        xAxisLabels={this.state.graph.xAxisLabels}\r\n        refresh={this.props.getDailyStatistic}\r\n      />\r\n      // )\r\n      // )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BaseLayout>\r\n        <div className=\"dashboard__wrapper\">\r\n          <Layout.Content\r\n            style={{\r\n              margin: \"24px 16px\",\r\n              padding: 24,\r\n              minHeight: 280\r\n            }}\r\n          >\r\n            <div className=\"dashboard__summary-container\">\r\n              <Row gutter={32} className=\"summary__row\">\r\n                <Col xs={24} sm={12} xl={6} className=\"summary__col\">\r\n                  <SummaryCard\r\n                    icon={\r\n                      <Icon\r\n                        type=\"user\"\r\n                        style={{ fontSize: \"3rem\", color: \"#fff\" }}\r\n                      />\r\n                    }\r\n                    iconBackground={colors.linearBlue}\r\n                    title={\"전체 사용자\"}\r\n                    subtitle={this.props.users.total || 0}\r\n                    updated={`${this.state.updatedAt} 기준`}\r\n                  />\r\n                </Col>\r\n                <Col xs={24} sm={12} xl={6} className=\"summary__col\">\r\n                  <SummaryCard\r\n                    icon={\r\n                      <Icon\r\n                        type=\"message\"\r\n                        theme=\"filled\"\r\n                        style={{ fontSize: \"3rem\", color: \"#fff\" }}\r\n                      />\r\n                    }\r\n                    iconBackground={colors.linearRed}\r\n                    title={\"토론방\"}\r\n                    subtitle={this.props.debates.total || 0}\r\n                    updated={`${this.state.updatedAt} 기준`}\r\n                  />\r\n                </Col>\r\n                <Col xs={24} sm={12} xl={6} className=\"summary__col\">\r\n                  <SummaryCard\r\n                    icon={\r\n                      <Icon\r\n                        type=\"appstore\"\r\n                        theme=\"filled\"\r\n                        style={{ fontSize: \"3rem\", color: \"#fff\" }}\r\n                      />\r\n                    }\r\n                    iconBackground={colors.linearGreen}\r\n                    title={\"찬/반 게시물\"}\r\n                    subtitle={\"+245\"}\r\n                    updated={`${this.state.updatedAt} 기준`}\r\n                  />\r\n                </Col>\r\n                <Col xs={24} sm={12} xl={6} className=\"summary__col\">\r\n                  <SummaryCard\r\n                    icon={\r\n                      <Icon\r\n                        type=\"edit\"\r\n                        theme=\"filled\"\r\n                        style={{ fontSize: \"3rem\", color: \"#fff\" }}\r\n                      />\r\n                    }\r\n                    iconBackground={colors.linearOrange}\r\n                    title={\"문의 게시물\"}\r\n                    subtitle={this.props.qna.total || 0}\r\n                    updated={`${this.state.updatedAt} 기준`}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n\r\n            <div className=\"dashboard__graph-container\">\r\n              <Row style={{ marginBottom: \"12px\" }}>\r\n                <Col span={24}>{this.renderLineGraph()}</Col>\r\n              </Row>\r\n            </div>\r\n\r\n            <div className=\"dashboard__boards-container\">\r\n              <Row gutter={8}>\r\n                <Col lg={12} md={24} className=\"boards__col\">\r\n                  <UserTable\r\n                    title\r\n                    users={this.props.users.users}\r\n                    pagination={false}\r\n                    more\r\n                    height={750}\r\n                  />\r\n                </Col>\r\n                <Col lg={12} md={24} className=\"boards__col\">\r\n                  <QnaTable\r\n                    title\r\n                    items={this.props.qna.items}\r\n                    pagination={false}\r\n                    more\r\n                    height={750}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Layout.Content>\r\n        </div>\r\n      </BaseLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  getUsers: option => dispatch(getUsers(option)),\r\n  getQnA: option => dispatch(fetchQnA(option)),\r\n  getDebates: option => dispatch(fetchDebates(option)),\r\n  getDailyStatistic: () => dispatch(fetchDailyStatistic())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import {\r\n  GET_DAILY_STATISTIC_FAILURE,\r\n  GET_DAILY_STATISTIC_SUCCESS,\r\n  GET_DAILY_STATISTIC_REQUEST\r\n} from \"../constants/actionTypes\";\r\n\r\nexport const fetchDailyStatistic = () => dispatch => {\r\n  dispatch({\r\n    type: GET_DAILY_STATISTIC_REQUEST\r\n  });\r\n\r\n  const body = {\r\n    auth: {\r\n      cpId: \"DebateWeb\",\r\n      authKey: \"Q29uc3V…\"\r\n    }\r\n  };\r\n\r\n  window.$axios\r\n    .post(\"etc/getDailyStatistics\", body)\r\n    .then(r => {\r\n      dispatch({\r\n        type: GET_DAILY_STATISTIC_SUCCESS,\r\n        payload: {\r\n          items: r.data.result\r\n        }\r\n      });\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_DAILY_STATISTIC_FAILURE,\r\n        payload: { error: err.message }\r\n      })\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout, Row, Col, Input, Select, Pagination } from \"antd\";\r\nimport { fetchQnA } from \"../actions/qna\";\r\nimport QnaTable from \"../components/table/QnaTable\";\r\nimport BaseLayout from \"../components/layout/BaseLayout\";\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nclass QnA extends React.Component {\r\n  state = {\r\n    listType: \"title\",\r\n    keyword: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.loadQnA();\r\n  }\r\n\r\n  handleListOptionChange = value => {\r\n    this.setState({\r\n      listType: value\r\n    });\r\n  };\r\n  onSearch = keyword => {\r\n    const { listType } = this.state;\r\n\r\n    this.setState({\r\n      keyword\r\n    });\r\n    this.props.loadQnA({\r\n      keyword,\r\n      listType\r\n    });\r\n  };\r\n\r\n  onPageChange = (page, pageSize) => {\r\n    const { listType, keyword } = this.state;\r\n    const skip = (page - 1) * pageSize;\r\n\r\n    this.props.loadQnA({\r\n      keyword,\r\n      listType,\r\n      offset: skip\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <BaseLayout>\r\n        <Layout.Content\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            minHeight: 280\r\n          }}\r\n        >\r\n          <Row style={{ textAlign: \"left\", marginBottom: \"12px\" }}>\r\n            <Input.Group compact>\r\n              <Select\r\n                defaultValue={this.state.listType}\r\n                style={{ width: \"7%\", marginRight: \"10px\" }}\r\n                onChange={this.handleListOptionChange} /*loading disabled*/\r\n              >\r\n                <Option value=\"title\">제목</Option>\r\n                <Option value=\"contents\">내용</Option>\r\n              </Select>\r\n\r\n              {/* ------ */}\r\n\r\n              {/* ------ */}\r\n\r\n              <Search\r\n                style={{ width: \"27%\" }}\r\n                autoFocus\r\n                placeholder=\"검색어를 입력하세요.\"\r\n                onSearch={this.onSearch}\r\n                // onChange={this.handleSearchChange}\r\n                // value={this.state.keyword}\r\n                enterButton\r\n              />\r\n            </Input.Group>\r\n          </Row>\r\n          <Row>\r\n            <Col span={24}>\r\n              <QnaTable\r\n                items={this.props.qna.items}\r\n                loading={this.props.qna.loading}\r\n                pagination={\r\n                  <Pagination\r\n                    defaultCurrent={1}\r\n                    total={this.props.qna.total}\r\n                    pageSize={10}\r\n                    onChange={this.onPageChange}\r\n                  />\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Layout.Content>\r\n      </BaseLayout>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadQnA: option => dispatch(fetchQnA(option))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QnA);\r\n","import React from \"react\";\r\nimport { Popconfirm, Button, Icon } from \"antd\";\r\n\r\nconst DeleteButton = ({ title, onConfirm }) => {\r\n  return (\r\n    <Popconfirm\r\n      title={title}\r\n      icon={<Icon type=\"question-circle-o\" style={{ color: \"red\" }} />}\r\n      onCancel={() => {}}\r\n      onConfirm={onConfirm}\r\n      cancelText=\"취소\"\r\n      okText=\"삭제\"\r\n    >\r\n      <Button\r\n        className=\"header__trigger pc\"\r\n        shape=\"round\"\r\n        icon=\"delete\"\r\n        // type=\"danger\"\r\n        size=\"small\"\r\n      />\r\n    </Popconfirm>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Input,\r\n  Card,\r\n  Icon,\r\n  Comment,\r\n  Tooltip,\r\n  Divider,\r\n  Empty\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { fetchQnAById, updateComment, deleteQnAById } from \"../actions/qna\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport notify from \"../helpers/notification\";\r\nimport DeleteButton from \"../components/DeleteButton\";\r\nimport BaseLayout from \"../components/layout/BaseLayout\";\r\nconst { TextArea } = Input;\r\n\r\nclass QnADetail extends React.Component {\r\n  state = {\r\n    comment: \"\"\r\n  };\r\n\r\n  onChange = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    this.props.loadQna(id);\r\n  }\r\n\r\n  handleComment = () => {\r\n    const { comment } = this.state;\r\n\r\n    if (!comment) {\r\n      return notify({\r\n        description: \"답변 내용을 입력해주세요.\",\r\n        type: \"error\",\r\n        message: \"입력 실패\"\r\n      });\r\n    }\r\n\r\n    const id = this.props.match.params.id;\r\n    this.props.updateComment(id, comment);\r\n\r\n    this.setState({\r\n      comment: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { loading, selectedItem } = this.props.qna;\r\n\r\n    return (\r\n      <BaseLayout>\r\n        <Layout.Content\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            minHeight: 280\r\n          }}\r\n        >\r\n          <Card className=\"wrapper__qna\">\r\n            <>\r\n              {selectedItem && (\r\n                <>\r\n                  <Row>\r\n                    <Col span={12}>\r\n                      <div className=\"qna__header\">\r\n                        <h1 className=\"qna-header__title\">\r\n                          {selectedItem.title}\r\n                        </h1>\r\n                        <span className=\"qna-header__icon\">\r\n                          {selectedItem.isLocked ? (\r\n                            <span>\r\n                              <Icon type=\"lock\" theme=\"filled\" />\r\n                              비공개\r\n                            </span>\r\n                          ) : (\r\n                            <span>\r\n                              <Icon type=\"unlock\" theme=\"filled\" />\r\n                              공개\r\n                            </span>\r\n                          )}\r\n                        </span>\r\n\r\n                        <div className=\"qna-header__info\">\r\n                          <span>{selectedItem.author}</span>\r\n                          <Divider type=\"vertical\" />\r\n                          <span>\r\n                            {moment(selectedItem.createDate).format(\"LLL\")}\r\n                          </span>\r\n                          <Divider type=\"vertical\" />\r\n                          <span>조회수 {selectedItem.viewCount}</span>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col\r\n                      span={12}\r\n                      style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n                    >\r\n                      <DeleteButton\r\n                        title=\"게시글을 삭제 하시겠습니까?\"\r\n                        onConfirm={() => {\r\n                          this.props.deleteQna(this.props.match.params.id);\r\n                        }}\r\n                      ></DeleteButton>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                      <Divider />\r\n                      <div className=\"qna__content\">{selectedItem.content}</div>\r\n                      <div className=\"qna__comment\">\r\n                        <h1>관리자 답변</h1>\r\n\r\n                        <Divider\r\n                          style={{ marginTop: \"7px\", marginBottom: 0 }}\r\n                        />\r\n\r\n                        {selectedItem.commentContent ? (\r\n                          <Comment\r\n                            author={<span>관리자</span>}\r\n                            content={<p>{selectedItem.commentContent}</p>}\r\n                            datetime={\r\n                              <Tooltip\r\n                                title={moment(selectedItem.commentDate).format(\r\n                                  \"LLL\"\r\n                                )}\r\n                              >\r\n                                <span>\r\n                                  {moment(selectedItem.commentDate).fromNow()}\r\n                                </span>\r\n                              </Tooltip>\r\n                            }\r\n                          />\r\n                        ) : (\r\n                          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        )}\r\n                      </div>\r\n                      <Divider style={{ marginTop: 0 }} />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row style={{ marginTop: 32 }} className=\"qna__input\">\r\n                    <Col>\r\n                      <TextArea\r\n                        name=\"comment\"\r\n                        comment={this.state.comment}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"답변하실 내용을 적어주세요.\"\r\n                        autosize={{ minRows: 7, maxRows: 7 }}\r\n                        value={this.state.comment}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              )}\r\n            </>\r\n\r\n            <Row style={{ marginTop: 20 }}>\r\n              <Col style={{ textAlign: \"right\" }}>\r\n                <Link to=\"/qna\">\r\n                  <Button style={{ marginRight: 12 }}>목록</Button>\r\n                </Link>\r\n                <Button\r\n                  onClick={this.handleComment}\r\n                  disabled={loading}\r\n                  loading={loading}\r\n                >\r\n                  답변하기\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Layout.Content>\r\n      </BaseLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadQna: id => dispatch(fetchQnAById(id)),\r\n  deleteQna: id => dispatch(deleteQnAById(id)),\r\n  updateComment: (id, comment) => dispatch(updateComment(id, comment))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QnADetail);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ko\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Divider, Icon, Card, Tooltip, Row, Col } from \"antd\";\r\nimport { deleteDebate } from \"../../actions/debates\";\r\nimport DeleteButton from \"../DeleteButton\";\r\n\r\nmoment.locale(\"ko\");\r\n\r\nconst More = () => (\r\n  <Tooltip placement=\"bottom\" title={\"더보기\"}>\r\n    <Link to=\"/users\">\r\n      <Icon type=\"more\" />\r\n    </Link>\r\n  </Tooltip>\r\n);\r\n\r\nclass DebateTable extends React.Component {\r\n  columns = [\r\n    {\r\n      title: \"번호\",\r\n      dataIndex: \"roomId\",\r\n      key: \"roomId\"\r\n    },\r\n    {\r\n      title: \"채널\",\r\n      dataIndex: \"channel\",\r\n      key: \"channel\"\r\n    },\r\n    {\r\n      title: \"상태\",\r\n      dataIndex: \"status\",\r\n      filters: [\r\n        // { text: \"전체\", value: \"all\" },\r\n        { text: \"준비\", value: \"ready\" },\r\n        { text: \"진행\", value: \"start\" },\r\n        { text: \"종료\", value: \"end\" }\r\n      ],\r\n      filterMultiple: false,\r\n      key: \"status\",\r\n      render: status => {\r\n        let str = \"\";\r\n        if (status === \"ready\") {\r\n          str = \"준비중\";\r\n        } else if (status === \"end\") {\r\n          str = \"종료\";\r\n        } else {\r\n          str = \"진행중\";\r\n        }\r\n\r\n        return <span>{str}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"주제\",\r\n      key: \"title\",\r\n      dataIndex: \"title\"\r\n    },\r\n    {\r\n      title: \"생성일\",\r\n      dataIndex: \"createTime\",\r\n      key: \"createTime\",\r\n      render: date => (\r\n        <span>\r\n          {moment(date).format(\"LLL\")}\r\n          <Divider type=\"vertical\" />\r\n          {moment(date).fromNow()}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"사회자\",\r\n      key: \"userId\",\r\n      dataIndex: \"userId\"\r\n    },\r\n    {\r\n      title: \"삭제\",\r\n      key: \"delete\",\r\n      render: (text, debate) => (\r\n        <DeleteButton\r\n          title=\"삭제 하시겠습니까\"\r\n          onConfirm={() => {\r\n            this.props.dispatch(deleteDebate(debate.roomId));\r\n          }}\r\n        ></DeleteButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    // filters.status[0]: undefined -> all\r\n    const filter = filters.status[0] ? filters.status[0] : \"all\";\r\n    this.props.handleStatusFilter(filter);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={this.props.title && \"토론방 관리\"}\r\n        bordered={false}\r\n        headStyle={{ fontWeight: \"bold\" }}\r\n        extra={this.props.more && More()}\r\n        style={{ height: this.props.height }}\r\n      >\r\n        <Table\r\n          columns={this.columns}\r\n          dataSource={this.props.items}\r\n          pagination={false}\r\n          loading={this.props.loading}\r\n          onChange={this.handleTableChange}\r\n          locale={{\r\n            filterConfirm: \"확인\",\r\n            filterReset: \"초기화\"\r\n          }}\r\n        />\r\n\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <Col style={{ textAlign: \"right\" }}>{this.props.pagination}</Col>\r\n        </Row>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({ ...state });\r\n// const mapDispatchToProps = dispatch => ({\r\n//   deleteDebate: id => dispatch(deleteDebate(id))\r\n// });\r\n\r\nexport default connect()(DebateTable);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout, Row, Col, Pagination } from \"antd\";\r\nimport DebateTable from \"../components/table/DebateTable\";\r\nimport BaseLayout from \"../components/layout/BaseLayout\";\r\n\r\nimport { fetchDebates } from \"../actions/debates\";\r\n\r\nclass Debates extends React.Component {\r\n  state = {\r\n    keyword: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDebates();\r\n  }\r\n\r\n  handleSelectChange = value => {\r\n    this.setState({\r\n      status: value\r\n    });\r\n  };\r\n\r\n  handleStatusFilter = status => {\r\n    this.props.fetchDebates({\r\n      status\r\n    });\r\n  };\r\n\r\n  onPageChange = (page, pageSize) => {\r\n    const { status, keyword } = this.state;\r\n    const skip = (page - 1) * pageSize;\r\n\r\n    this.props.fetchDebates({\r\n      keyword,\r\n      status,\r\n      offset: skip\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BaseLayout>\r\n        <Layout.Content\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            minHeight: 280\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col span={24}>\r\n              <DebateTable\r\n                items={this.props.debates.items}\r\n                loading={this.props.debates.loading}\r\n                handleStatusFilter={this.handleStatusFilter}\r\n                pagination={\r\n                  <Pagination\r\n                    defaultCurrent={1}\r\n                    total={this.props.debates.total}\r\n                    pageSize={10}\r\n                    onChange={this.onPageChange}\r\n                  />\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Layout.Content>\r\n      </BaseLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchDebates: option => dispatch(fetchDebates(option))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Debates);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout, Row, Col, Input, Select, Pagination } from \"antd\";\r\nimport UserTable from \"../components/table/UserTable\";\r\nimport { getUsers } from \"../actions/users\";\r\nimport BaseLayout from \"../components/layout/BaseLayout\";\r\n\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\n\r\nclass Users extends React.Component {\r\n  state = {\r\n    listType: \"id\",\r\n    userType: \"all\",\r\n    keyword: \"\"\r\n  };\r\n\r\n  handleUserOptionChange = value => {\r\n    this.setState({\r\n      userType: value\r\n    });\r\n  };\r\n\r\n  onSearch = keyword => {\r\n    const { listType, userType } = this.state;\r\n\r\n    this.setState({\r\n      keyword\r\n    });\r\n\r\n    this.props.getUsers({\r\n      keyword,\r\n      listType,\r\n      userType\r\n    });\r\n  };\r\n\r\n  onPageChange = (page, pageSize) => {\r\n    const { listType, userType, keyword } = this.state;\r\n    const skip = (page - 1) * pageSize;\r\n\r\n    this.props.getUsers({\r\n      keyword,\r\n      listType,\r\n      userType,\r\n      offset: skip\r\n    });\r\n  };\r\n\r\n  handleListOptionChange = value => {\r\n    this.setState({\r\n      listType: value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getUsers();\r\n  }\r\n  render() {\r\n    return (\r\n      <BaseLayout>\r\n        <Layout.Content\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            minHeight: 280\r\n          }}\r\n        >\r\n          <Row style={{ textAlign: \"left\", marginBottom: \"12px\" }}>\r\n            <Input.Group compact>\r\n              <Select\r\n                defaultValue={this.state.listType}\r\n                style={{ width: \"7%\", marginRight: \"10px\" }}\r\n                onChange={this.handleListOptionChange} /*loading disabled*/\r\n              >\r\n                <Option value=\"id\">아이디</Option>\r\n                <Option value=\"name\">닉네임</Option>\r\n              </Select>\r\n\r\n              <Select\r\n                defaultValue={this.state.userType}\r\n                style={{ width: \"7%\", marginRight: \"10px\" }}\r\n                onChange={this.handleUserOptionChange} /*loading disabled*/\r\n              >\r\n                <Option value=\"all\">전체</Option>\r\n                <Option value=\"general\">일반</Option>\r\n                <Option value=\"manager\">운영자</Option>\r\n                <Option value=\"admin\">관리자</Option>\r\n              </Select>\r\n\r\n              {/* ------ */}\r\n\r\n              {/* ------ */}\r\n\r\n              <Search\r\n                style={{ width: \"27%\" }}\r\n                autoFocus\r\n                placeholder=\"검색어를 입력하세요.\"\r\n                onSearch={this.onSearch}\r\n                // onChange={this.handleSearchChange}\r\n                // value={this.state.keyword}\r\n                enterButton\r\n              />\r\n            </Input.Group>\r\n          </Row>\r\n          <Row>\r\n            <Col span={24}>\r\n              <UserTable\r\n                users={this.props.users.users}\r\n                loading={this.props.users.loading}\r\n                pagination={\r\n                  <Pagination\r\n                    defaultCurrent={1}\r\n                    total={this.props.users.total}\r\n                    pageSize={10}\r\n                    onChange={this.onPageChange}\r\n                  />\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Layout.Content>\r\n      </BaseLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  getUsers: option => dispatch(getUsers(option))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Users);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Icon, Input, Button, Card, Row, Col } from \"antd\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nclass Login extends React.Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, user) => {\r\n      if (!err) {\r\n        this.props.login(user);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className=\"wrapper__login\">\r\n        <div className=\"login__container\">\r\n          <Card\r\n            style={{ width: 427 }}\r\n            title=\"관리자 로그인\"\r\n            headStyle={{\r\n              textAlign: \"center\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"1.3rem\"\r\n            }}\r\n            bodyStyle={\r\n              {\r\n                // boxShadow: \"inset 0px 0px 19px -8px rgba(0,0,0,0.32)\"\r\n              }\r\n            }\r\n          >\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"id\", {\r\n                  rules: [{ required: true, message: \"아이디를 입력해주세요.\" }]\r\n                })(\r\n                  <Input\r\n                    prefix={\r\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                    }\r\n                    placeholder=\"아이디\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"password\", {\r\n                  rules: [\r\n                    { required: true, message: \"패스워드를 입력해주세요\" }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    prefix={\r\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                    }\r\n                    type=\"password\"\r\n                    placeholder=\"패스워드\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <p className=\"login__text--warn\">\r\n                현재 페이지는 관리자 전용페이지 입니다.\r\n              </p>\r\n              <Form.Item>\r\n                {/* remember me */}\r\n                {/* <Row>\r\n                  <Col>\r\n                    {getFieldDecorator(\"remember\", {\r\n                      valuePropName: \"checked\",\r\n                      initialValue: true\r\n                    })(<Checkbox>Remember me</Checkbox>)}\r\n                  </Col>\r\n                </Row> */}\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      // type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      block\r\n                      className=\"login__btn\"\r\n                    >\r\n                      로그인\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form.Item>\r\n            </Form>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedLogin = Form.create({ name: \"normal_login\" })(Login);\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  login: user => dispatch(login(user))\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedLogin);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Result, Button } from \"antd\";\r\nconst e404 = () => {\r\n  return (\r\n    <Result\r\n      status=\"404\"\r\n      title=\"404\"\r\n      subTitle=\"찾을 수 없는 페이지 입니다. 요청하신 페이지가 사라졌거나, 잘못되 경로를 입력하셨습니다.\"\r\n      extra={\r\n        <Button type=\"primary\">\r\n          <Link to=\"/\">홈으로 이동</Link>\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default e404;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n// Pages\r\nimport Home from \"./pages/Home\";\r\nimport QnA from \"./pages/QnA\";\r\nimport QnADetail from \"./pages/QnADetail\";\r\nimport Debates from \"./pages/Debates\";\r\nimport Users from \"./pages/Users\";\r\nimport WrappedLogin from \"./pages/Login\";\r\nimport { isAuthenticated } from \"./helpers/auth\";\r\nimport e404 from \"./pages/e404\";\r\nimport { setPage } from \"./actions/page\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    window.onload = () => {\r\n      // 이거 때문에 페이지 깜빡거림\r\n      // 가장 best한 방법은\r\n      // 현재 라우터 유지시는 방법\r\n      // 나중에 해결하기\r\n      // if (window.location.pathname !== \"/\") {\r\n      //   window.location.replace(\"/\");\r\n      // }\r\n    };\r\n\r\n    this.props.setPage(window.location.pathname);\r\n  }\r\n  componentWillUnmount() {\r\n    window.onload = null;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper__app\">\r\n        {true ? (\r\n          <>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Redirect to=\"/dashboard\" />\r\n              </Route>\r\n              <Route path=\"/dashboard\" component={Home} />\r\n\r\n              <Route path=\"/users\" component={Users} />\r\n              <Route path=\"/debates\" component={Debates} />\r\n              <Route path=\"/qna/:id\" component={QnADetail} />\r\n              <Route path=\"/qna\" component={QnA} />\r\n              <Route path=\"*\" component={e404} />\r\n            </Switch>\r\n          </>\r\n        ) : (\r\n          <WrappedLogin />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  setPage: page => dispatch(setPage(page))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\n// Styles\r\nimport \"antd/dist/antd.less\";\r\n// import \"antd/dist/antd.css\";\r\nimport \"./styles/index.css\";\r\n\r\nwindow.$store = store;\r\n\r\naxios.defaults.baseURL = \"http://106.240.247.44:4040/debate/v1\";\r\nwindow.$axios = axios;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}